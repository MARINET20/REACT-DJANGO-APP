version: '3.8'

networks:
  ds_network:
    driver: bridge
    ipam:
        config:
            - subnet: 172.20.10.0/24

services:
    postgres:
        image: postgres:14.2-alpine
        container_name: postgres_db
        volumes:
            - postgres_volume:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - 5432:5432
        restart: always
        networks:
            ds_network:
                ipv4_address: 172.20.10.20

    django: 
        build: ./django/
        container_name: djangoapp
        restart: always
        ports:
            - 8000:8000
        depends_on:
            - postgres
        networks:
            ds_network:
                ipv4_address: 172.20.10.21
        env_file:
            - ./.env

    node:
        build: ./frontend/
        container_name: reactapp
        restart: always
        ports:
            - 3000:3000
        volumes:
            - ./frontend/public/:/usr/src/app/public/
            - ./frontend/src/:/usr/src/app/src/
        depends_on:
            - django
        networks:
            ds_network:
                ipv4_address: 172.20.10.22 
    # nginx:
    #     image: nginx:latest
    #     volumes:
    #     - ./conf/nginx.conf:/etc/nginx/nginx.conf
    #     - static_volume:/static
    #     ports:
    #     - "80:80"
    #     networks:
    #     - my_network
    #     depends_on:
    #     - node
    #     - django

# создаём volume для статики
volumes:
  postgres_volume:
#   static_volume: