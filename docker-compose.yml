version: '3.8'

# создаём сеть.
networks:
  my_network:
    driver: bridge

services:
    postgres:
        image: postgres:14.2-alpine
        container_name: postgres_db
        volumes:
            - postgres_volume:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - 5432:5432
        restart: always
        networks:
            - my_network

    # pgadmin:
    #     image: dpage/pgadmin4:6.12
    #     ports:
    #     - 5080:80
    #     environment:
    #     - PGADMIN_DEFAULT_EMAIL=admin@example.com
    #     - PGADMIN_DEFAULT_PASSWORD=0000
    #     volumes:
    #     - pgadmin_data:/home/rundeck/server/data

    django: 
        build: ./django/
        container_name: djangoapp
        restart: always
        ports:
            - 8000:8000
        depends_on:
            - postgres
        networks:
            - my_network
        # environment:
        # postgres
            # - POSTGRES_USER=${DB_USER}
            # - POSTGRES_DB=${DB_NAME}
            # - POSTGRES_PASSWORD=${DB_PASSWORD}
            # - POSTGRES_PORT=${DB_PORT}
            # - POSTGRES_HOST=${DB_HOST}
        # django
            # - SECRET_KEY=${SECRET_KEY}
            # - DEBUG=${DEBUG}
            # - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
            # - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
            # - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
        env_file:
            - ./.env

    node:
        build: ./frontend/
        container_name: reactapp
        restart: always
        ports:
            - 3000:3000
        volumes:
            - ./frontend/public/:/usr/src/app/public/
            - ./frontend/src/:/usr/src/app/src/
        depends_on:
            - django
        networks:
            - my_network  
    # nginx:
    #     image: nginx:latest
    #     volumes:
    #     - ./conf/nginx.conf:/etc/nginx/nginx.conf
    #     - static_volume:/static
    #     ports:
    #     - "80:80"
    #     networks:
    #     - my_network
    #     depends_on:
    #     - node
    #     - django

# создаём volume для статики
volumes:
  postgres_volume:
#   pgadmin_data:
#   static_volume:

